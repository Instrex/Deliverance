function REVEL.GlacierShop()
    local machine = Isaac.Spawn(REVEL.ENT.REVENDING_MACHINE.id, REVEL.ENT.REVENDING_MACHINE.variant, 0, REVEL.room:GetGridPosition(25), REVEL.VEC_ZERO, nil)

    revel.glacierShopSpawned = true
end

revel:AddCallback(ModCallbacks.MC_POST_NEW_ROOM, function()
	local revending = Isaac.FindByType(REVEL.ENT.REVENDING_MACHINE.id, REVEL.ENT.REVENDING_MACHINE.variant, -1, false, false)
	for _, machine in ipairs(revending) do
		if machine.SubType <= 0 then
			REVEL.ChooseGlacierShopItem(machine)
		else
			local isOne = REVEL.STAGE.Glacier:IsStage(true)
			local config = REVEL.config:GetCollectible(machine.SubType)
			local gfx = config.GfxFileName
			machine:GetSprite():ReplaceSpritesheet(3, gfx)
			machine:GetSprite():LoadGraphics()
			if isOne then
				machine:GetData().Price = 7
				machine:GetSprite():Play("IdleSale", true)
			else
				machine:GetData().Price = 15
				machine:GetSprite():Play("Idle", true)
			end
		end
	end
end)

revel:AddCallback(ModCallbacks.MC_POST_UPDATE, function()
    local revending = Isaac.FindByType(REVEL.ENT.REVENDING_MACHINE.id, REVEL.ENT.REVENDING_MACHINE.variant, -1, false, false)
	local explosions = Isaac.FindByType(EntityType.ENTITY_EFFECT, EffectVariant.BOMB_EXPLOSION, -1, false, false)
    for _, machine in ipairs(revending) do
		if machine.SubType <= 0 then
			REVEL.ChooseGlacierShopItem(machine)
		end

        local sprite, data = machine:GetSprite(), machine:GetData()
		if not data.Init then
			machine:AddEntityFlags(EntityFlag.FLAG_NO_KNOCKBACK)
			data.pos = machine.Position
			data.Init = true
		end

        if data.Price then
            for _, player in ipairs(REVEL.players) do
                if player:GetNumCoins() >= data.Price and (player.Position:DistanceSquared(machine.Position) < (player.Size + machine.Size) ^ 2) then
                    player:AddCoins(-data.Price)
                    if data.Price > 7 then
                        sprite:Play("InitiateFull", true)
						REVEL.sfx:Play(SoundEffect.SOUND_COIN_SLOT, 1, 0, false, 1)
                    else
                        sprite:Play("InitiateFullSale", true)
						REVEL.sfx:Play(SoundEffect.SOUND_COIN_SLOT, 1, 0, false, 1)
                    end

                    data.Price = nil
                    break
                end
            end
        end

		machine:MultiplyFriction(0)
		-- machine.Velocity = data.pos - machine.Position --just in case
		machine.Position = data.pos

		local asploded = false
        for _, e in ipairs(explosions) do
            if e.Position:DistanceSquared(machine.Position) < 40000 then
				asploded = true
			end
		end

		if asploded then
			local newMachine = REVEL.ENT.REVENDING_MACHINE:spawn(machine.Position, REVEL.VEC_ZERO, nil)
			REVEL.ChooseGlacierShopItem(newMachine, machine.SubType)
			newMachine:ClearEntityFlags(EntityFlag.FLAG_APPEAR)
			machine:Remove()
		end

        if sprite:IsFinished("Initiate") then
            sprite:Play("Idle", true)
        end
        if sprite:IsFinished("InitiateSale") then
            sprite:Play("IdleSale", true)
        end
        if sprite:IsFinished("InitiateFull") or sprite:IsFinished("InitiateFullSale") then
            sprite:Play("Prize", true)
        end

        if sprite:IsFinished("Prize") then
            machine:Remove()
            local collectible = Isaac.Spawn(EntityType.ENTITY_PICKUP, PickupVariant.PICKUP_COLLECTIBLE, machine.SubType, machine.Position, REVEL.VEC_ZERO, nil)
			local config = REVEL.config:GetCollectible(machine.SubType)
			local gfx = config.GfxFileName
			local collectibleSprite = collectible:GetSprite()
            collectibleSprite:Load("gfx/grid/revel2/revending_collectible.anm2", false)
            collectibleSprite:ReplaceSpritesheet(1, gfx)
            collectibleSprite:LoadGraphics()
            collectibleSprite:SetOverlayFrame("Alternates", 0)
            collectibleSprite:Play("Idle", true)
        end
    end
end)


revel:AddCallback(ModCallbacks.MC_POST_ENTITY_KILL, function(_, e)
    local room = REVEL.room
    if room:GetType() == RoomType.ROOM_SHOP and not REVEL.game:IsGreedMode() and (REVEL.STAGE.Glacier:IsStage() or REVEL.STAGE.Tomb:IsStage()) and not revel.glacierShopSpawned then
        REVEL.GlacierShop()
    end
end, EntityType.ENTITY_GREED)

function revel:OnNewRoom()
    local room = REVEL.room
    local level = REVEL.level

	lastRevendingCollectiblePosition = nil
    if not REVEL.game:IsGreedMode() and (REVEL.STAGE.Glacier:IsStage() or REVEL.STAGE.Tomb:IsStage()) and room:GetType() == RoomType.ROOM_SHOP then
		if room:IsFirstVisit() and #Isaac.FindByType(EntityType.ENTITY_GREED, -1, -1, false) == 0 then
			REVEL.GlacierShop()
		end
    end
end

